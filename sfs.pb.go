// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: sfs.proto

package studiofs_db_schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Primary configuration object for filesystem instances
type FilesystemConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                                     // Unique filesystem identifier
	FriendlyName  string                 `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"` // Human-readable name
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // Creation timestamp
	S3Config      *S3Config              `protobuf:"bytes,4,opt,name=s3_config,json=s3Config,proto3" json:"s3_config,omitempty"`             // Object storage configuration
	ChunkConfig   *ChunkConfig           `protobuf:"bytes,5,opt,name=chunk_config,json=chunkConfig,proto3" json:"chunk_config,omitempty"`    // Data chunking parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilesystemConfig) Reset() {
	*x = FilesystemConfig{}
	mi := &file_sfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemConfig) ProtoMessage() {}

func (x *FilesystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemConfig.ProtoReflect.Descriptor instead.
func (*FilesystemConfig) Descriptor() ([]byte, []int) {
	return file_sfs_proto_rawDescGZIP(), []int{0}
}

func (x *FilesystemConfig) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FilesystemConfig) GetFriendlyName() string {
	if x != nil {
		return x.FriendlyName
	}
	return ""
}

func (x *FilesystemConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FilesystemConfig) GetS3Config() *S3Config {
	if x != nil {
		return x.S3Config
	}
	return nil
}

func (x *FilesystemConfig) GetChunkConfig() *ChunkConfig {
	if x != nil {
		return x.ChunkConfig
	}
	return nil
}

type S3Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                    // S3 endpoint URL
	Bucket        string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`                        // Target bucket name
	AccessKey     string                 `protobuf:"bytes,3,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"` // Access credentials
	SecretKey     string                 `protobuf:"bytes,4,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"` // Secret credentials
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`                        // AWS region
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3Config) Reset() {
	*x = S3Config{}
	mi := &file_sfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Config) ProtoMessage() {}

func (x *S3Config) ProtoReflect() protoreflect.Message {
	mi := &file_sfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Config.ProtoReflect.Descriptor instead.
func (*S3Config) Descriptor() ([]byte, []int) {
	return file_sfs_proto_rawDescGZIP(), []int{1}
}

func (x *S3Config) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3Config) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Config) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *S3Config) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *S3Config) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ChunkConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaxChunkSizeMb uint32                 `protobuf:"varint,1,opt,name=max_chunk_size_mb,json=maxChunkSizeMb,proto3" json:"max_chunk_size_mb,omitempty"` // Maximum chunk size (MB)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChunkConfig) Reset() {
	*x = ChunkConfig{}
	mi := &file_sfs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkConfig) ProtoMessage() {}

func (x *ChunkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sfs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkConfig.ProtoReflect.Descriptor instead.
func (*ChunkConfig) Descriptor() ([]byte, []int) {
	return file_sfs_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkConfig) GetMaxChunkSizeMb() uint32 {
	if x != nil {
		return x.MaxChunkSizeMb
	}
	return 0
}

// Runtime statistics updated by sfs-artist client
type FilesystemStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalFiles     uint64                 `protobuf:"varint,1,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`               // Total file count
	TotalDirs      uint64                 `protobuf:"varint,2,opt,name=total_dirs,json=totalDirs,proto3" json:"total_dirs,omitempty"`                  // Total directory count
	TotalSizeBytes uint64                 `protobuf:"varint,3,opt,name=total_size_bytes,json=totalSizeBytes,proto3" json:"total_size_bytes,omitempty"` // Logical size of all files
	LastUpdated    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`             // Last statistics update
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FilesystemStats) Reset() {
	*x = FilesystemStats{}
	mi := &file_sfs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesystemStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemStats) ProtoMessage() {}

func (x *FilesystemStats) ProtoReflect() protoreflect.Message {
	mi := &file_sfs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemStats.ProtoReflect.Descriptor instead.
func (*FilesystemStats) Descriptor() ([]byte, []int) {
	return file_sfs_proto_rawDescGZIP(), []int{3}
}

func (x *FilesystemStats) GetTotalFiles() uint64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *FilesystemStats) GetTotalDirs() uint64 {
	if x != nil {
		return x.TotalDirs
	}
	return 0
}

func (x *FilesystemStats) GetTotalSizeBytes() uint64 {
	if x != nil {
		return x.TotalSizeBytes
	}
	return 0
}

func (x *FilesystemStats) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

var File_sfs_proto protoreflect.FileDescriptor

const file_sfs_proto_rawDesc = "" +
	"\n" +
	"\tsfs.proto\x12\bsfsproto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf1\x01\n" +
	"\x10FilesystemConfig\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12#\n" +
	"\rfriendly_name\x18\x02 \x01(\tR\ffriendlyName\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12/\n" +
	"\ts3_config\x18\x04 \x01(\v2\x12.sfsproto.S3ConfigR\bs3Config\x128\n" +
	"\fchunk_config\x18\x05 \x01(\v2\x15.sfsproto.ChunkConfigR\vchunkConfig\"\x94\x01\n" +
	"\bS3Config\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06bucket\x18\x02 \x01(\tR\x06bucket\x12\x1d\n" +
	"\n" +
	"access_key\x18\x03 \x01(\tR\taccessKey\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x04 \x01(\tR\tsecretKey\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\"8\n" +
	"\vChunkConfig\x12)\n" +
	"\x11max_chunk_size_mb\x18\x01 \x01(\rR\x0emaxChunkSizeMb\"\xba\x01\n" +
	"\x0fFilesystemStats\x12\x1f\n" +
	"\vtotal_files\x18\x01 \x01(\x04R\n" +
	"totalFiles\x12\x1d\n" +
	"\n" +
	"total_dirs\x18\x02 \x01(\x04R\ttotalDirs\x12(\n" +
	"\x10total_size_bytes\x18\x03 \x01(\x04R\x0etotalSizeBytes\x12=\n" +
	"\flast_updated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdatedB*Z(github.com/valandreev/studiofs-db-schemab\x06proto3"

var (
	file_sfs_proto_rawDescOnce sync.Once
	file_sfs_proto_rawDescData []byte
)

func file_sfs_proto_rawDescGZIP() []byte {
	file_sfs_proto_rawDescOnce.Do(func() {
		file_sfs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sfs_proto_rawDesc), len(file_sfs_proto_rawDesc)))
	})
	return file_sfs_proto_rawDescData
}

var file_sfs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sfs_proto_goTypes = []any{
	(*FilesystemConfig)(nil),      // 0: sfsproto.FilesystemConfig
	(*S3Config)(nil),              // 1: sfsproto.S3Config
	(*ChunkConfig)(nil),           // 2: sfsproto.ChunkConfig
	(*FilesystemStats)(nil),       // 3: sfsproto.FilesystemStats
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_sfs_proto_depIdxs = []int32{
	4, // 0: sfsproto.FilesystemConfig.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: sfsproto.FilesystemConfig.s3_config:type_name -> sfsproto.S3Config
	2, // 2: sfsproto.FilesystemConfig.chunk_config:type_name -> sfsproto.ChunkConfig
	4, // 3: sfsproto.FilesystemStats.last_updated:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_sfs_proto_init() }
func file_sfs_proto_init() {
	if File_sfs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sfs_proto_rawDesc), len(file_sfs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sfs_proto_goTypes,
		DependencyIndexes: file_sfs_proto_depIdxs,
		MessageInfos:      file_sfs_proto_msgTypes,
	}.Build()
	File_sfs_proto = out.File
	file_sfs_proto_goTypes = nil
	file_sfs_proto_depIdxs = nil
}
